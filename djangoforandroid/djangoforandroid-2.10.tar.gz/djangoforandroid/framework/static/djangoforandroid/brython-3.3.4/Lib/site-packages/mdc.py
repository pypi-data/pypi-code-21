from browser import document, window


########################################################################
class MDC():
    """"""

    #----------------------------------------------------------------------
    def __init__(self):
        """"""

        self.MDC_ = {

            "linearProgress": "MDCLinearProgress",
            "drawer": "MDCTemporaryDrawer",
            "dialog": "MDCDialog",
        }




    #----------------------------------------------------------------------
    def __getattr__(self, attr):

        if attr in self.MDC_.keys():
            #return lambda s: getattr(getattr(window.mdc, attr), self.MDC_[attr]).new(document.querySelector(s)).foundation_
            return lambda s: self.__mdc__(attr, s)
        else:
            return None


    #----------------------------------------------------------------------
    def __mdc__(self, attr, selector):
        """"""
        el = document.querySelector(selector)
        if not el:
            return None
        return getattr(getattr(window.mdc, attr), self.MDC_[attr]).new(el).foundation_



#print(MDC.linearProgress)

    ##----------------------------------------------------------------------
    #@classmethod
    #def linearProgress(self, selector):
        #""""""
        #el = document.querySelector(selector)
        #if not el:
            #return None

        #MDCLinearProgress = window.mdc.linearProgress.MDCLinearProgress
        #linear_progress = MDCLinearProgress.new(el)

        #return linear_progress.foundation_



    ##----------------------------------------------------------------------
    #@classmethod
    #def drawer(self, selector):
        #""""""
        #el = document.querySelector(selector)
        #if not el:
            #return None

        #MDCTemporaryDrawer = mdc.drawer.MDCTemporaryDrawer;
        #drawer = MDCTemporaryDrawer.new(drawerEl)

        #return drawer.foundation_


    ##----------------------------------------------------------------------
    #@classmethod
    #def dialog(self, selector):
        #""""""
        #el = document.querySelector(selector)
        #if not el:
            #return None

        #MDCDialog = mdc.dialog.MDCDialog;
        #dialog = MDCDialog.new(drawerEl)

        #return dialog.foundation_





    ##----------------------------------------------------------------------
    #def change_tab(self, event):
        #""""""

        #Tools.jq(".mdc-tab-bar .mdc-tab").removeClass("mdc-tab--active")
        #Tools.jq(event.target).addClass("mdc-tab--active")

        #print("hkgj")


    #$(".mdc-tab-bar .mdc-tab").on "click", (event) ->
        #$(".mdc-tab-bar .mdc-tab").removeClass("mdc-tab--active")
        #$(@).addClass("mdc-tab--active")